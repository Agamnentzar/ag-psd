"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var base64_js_1 = require("base64-js");
var descriptor_1 = require("../descriptor");
var psdReader_1 = require("../psdReader");
var psdWriter_1 = require("../psdWriter");
var common_1 = require("./common");
var tests = [
    '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',
];
describe('descriptor', function () {
    describe('reads and writes', function () {
        tests.forEach(function (value, index) { return it("test " + index, function () {
            var expected = base64_js_1.toByteArray(value);
            var reader = psdReader_1.createReader(expected.buffer, expected.byteOffset, expected.byteLength);
            var struct = descriptor_1.readDescriptorStructure(reader);
            var writer = psdWriter_1.createWriter();
            descriptor_1.writeDescriptorStructure(writer, '', 'null', struct);
            var actual = psdWriter_1.getWriterBufferNoCopy(writer);
            // require('fs').writeFileSync('expected.bin', Buffer.from(expected));
            // require('fs').writeFileSync('actual.bin', Buffer.from(actual));
            common_1.compareBuffers(Buffer.from(actual), Buffer.from(expected), "descriptorReadWrite");
        }); });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
